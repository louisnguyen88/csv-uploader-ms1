buildscript {
    ext {
        springBootVersion = '2.5.0'
        springCloudVersion = 'Finchley.SR1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
plugins {
    id 'com.google.cloud.tools.jib' version '3.1.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.5.0'
    id 'java'
}
group = 'com.gradteam'
version = '1.0'
sourceCompatibility = '1.8'

def appName = "ms1-uploader"
def appVendor = "Seisma Grad Team"
def builtBy = "louisnguyen"
def now = new Date().format("dd/MM/yyyy HH:mm:ss")
def commitHashFull = UUID.randomUUID().toString()

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.amazonaws:aws-java-sdk:1.12.37'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
    //swagger
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

sourceSets {
    main {
        resources.excludes = ["*.jar"]
    }

}


jib {
    from {
        image = "adoptopenjdk/openjdk8"
        //auth {
        //    username = 'louisdock88'
        //    password = 'GetPr@2022'
        //}
    }
    to {
        image = "289193905928.dkr.ecr.ap-southeast-2.amazonaws.com/upload-csv:$commitHashFull"
        //credHelper = 'ecr-login'
        //auth {
        //    username = 'AWS'
        //    password = 'eyJwYXlsb2FkIjoidVpDK3JCS0t6NnVGNXRuTUFMSUZsSnQrdnhIdUs2WFprc1RRT09HTy9jMjdOMy8rSW9Cc0UxS2NxaHBBQmZvUEtZR2s5blc0TjFxMlRCazNUamEreW9VcmgyamRFZmowckttN0w4VzhlV3Z6T1Z5VWUwbVFyclhoS052NTBaY0lmVUQ3eldqSFk5U21MOXMyM2dCMUxkeGFOS1k3b1A4bWxxdGg3a29KQmh6SXJ0cGZUNmZOR1RZeUV3S0kvM0luNFJiejhja2EreUVMZ1dLRW8zQWp5bkRtaXVZR1ZCZG1SZ201Q0hVeEZYMmtDTUU3d2JxN202RDdpM0p3czJmT2VsYTJBZHY4OXlmQ3NPa00ySjhXZ25jU2pDUlBGdnRKdVlJalNxQ0R3TStXSmhBK1llRWR2RnpFQzZBQ0JNRUtEY0VmR1FTQkhCSXQzV25KRXloTEpORWZHU1JXQVlEZUk3WWRDM05oUlppNUNFdXFKTGhpU1FIb1Y5NSthWG50WG5mVjI2SXZGYTNkK1RIZmtOVzVQYlQyNjEvTGVlOHd4Q0drWG1wZHI4ZTVockJYODBXMTMvOEdzR1I4bzVOMC9GL05NeWtmSmY4Q2dCUC9mNk1CRWcwMmtuaVNEMmJ2UnZjMDJVV3pNQlBybUNyWU9rTWd3di9vdHZGL3pVdnlqSGF1SmhKY3lybkVxUTZrY25wc0JzREg2bGNxUXhFazV5N1RDZThrQ3JGNlQwWWVtdWpmblR0dFNBa3lOVE9NMDJZWXpUK21QaEE5OHVueUpXK1NBVFAwenJjdkl3S21UQjM5d2I4UXRxeWFzNU0yTVVTa2xQVjFrTFQzVFgwUCtCRHhZVTJ1QjloNHFkeUVuZFE3UTRJblBYSGJQT0RGSWN1Wlo2c29PUUJZUXJsTkVGYTJQeFlDdjNQRlJaVEprQUJSMEp0TU9vSExNNEIxeEsya3QyOTFiY3dicmpDUnZLWU1QblcwMTZFSTZ3bzhpZjN0YXhMbjRPejBSdEtuT240YThvcmt6UU1YL2xXaFdZeFNzWjRBR2J4ZjdYNU81WHpYRklJTm1YREJ4dnhTS2ZjNFZkcVJlVWg3OS9XL200Qy9DenFoYXJaa2F4UC9yZ0dnKzh1bGNvYWNWZ1lhYzdQNmpWRjBZLzkySXk4Sm5GSzdvc2hiWWZuK3NFbTBneUFiK0JWUG90UkxGRGozYkVKTWZBQTZFTXpYRnVUSUlWSDBpWEJyYVdRd3NOUHZqMS9PZEE4aVY5eEhhS252VEEyVWlGMWJHbTBkT2QrZFJ3ZVNGL0kxOVNjK05ldlhMdHR3aDRqWVZ5RXRPbXRoY2VMcVJsUFplNDR1cXBXRTkrRzNSY1NFYkFJcnFKc0xWYk0xeFJPc05HNXBSbFZNd3N1N1NCb0tQMnBnbFhFc0V1ZE9BUkRHQ2xoYnFYbUg4RUc3VTlsdWxST2JmYkFOQmNvVlEwY1JPdm1oU1A4cG9YN05SS0c1VWh2SSIsImRhdGFrZXkiOiJBUUVCQUhoTHlqejdQSkVQbVlicUg2QTZmL3dXTnp5ejVCS2EzN0JuQlBzQXl1RjFLUUFBQUg0d2ZBWUpLb1pJaHZjTkFRY0dvRzh3YlFJQkFEQm9CZ2txaGtpRzl3MEJCd0V3SGdZSllJWklBV1VEQkFFdU1CRUVERkc0YW1aMzNxYVN4SmdYUndJQkVJQTdnR2RCZXhYVkU2UGpOdEI0Y3U3d1BFcnRLdjNTMFh4K2pXdU9ZVWluV1luWXZmZzVQNVFVQXRqVWJvcVdtdDYzaFNXZTZ4NDlVdVBSQWNVPSIsInZlcnNpb24iOiIyIiwidHlwZSI6IkRBVEFfS0VZIiwiZXhwaXJhdGlvbiI6MTYyOTU5NzcwNH0='
        //}
        //image = "louisdock88/upload-csv:$imageType-$buildNumber-$commitHashFull"
        //auth {
        //    username = 'louisdock88'
        //    password = 'GetPr@2022'
       // }
        tags = ['latest']
    }
    container {
        ports = ['8080', '9000']
        labels = [
                maintainer: "aws-solution",
                fullCommitHash: commitHashFull,
                buildBy: builtBy,
                appName: appName,
                "org.label-schema.build-date": "${now.toString()}" as String,
                "org.label-schema.image-version": "$commitHashFull" as String
        ]
        environment = [
                appName: appName,
                appVendor: appVendor,
                builtBy: builtBy,
                buildDate: "${now.toString()}" as String,
                implementationDate: "${now.toString()}" as String,
                versionString: version,
                imageName: "$commitHashFull" as String
        ]
    }
}
